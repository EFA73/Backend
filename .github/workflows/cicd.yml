name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Checkout
        uses: actions/checkout@v4

      #      - name: Setup Gradle
      #        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Docker image build
        run: |
          docker build -t ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE1 }} ${{ secrets.MODULE1 }}/.
          docker build -t ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE2 }} ${{ secrets.MODULE2 }}/.
          docker build -t ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE3 }} ${{ secrets.MODULE3 }}/.

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dockerhub push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE1 }}:latest
          docker push ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE2 }}:latest
          docker push ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE3 }}:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker rm -f ${{ secrets.MODULE1 }}
            docker rm -f ${{ secrets.MODULE2 }}
            docker rm -f ${{ secrets.MODULE3 }}
            docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE1 }}:latest
            docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE2 }}:latest
            docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE3 }}:latest
            docker run -d -e VAULT_URI=${{ secrets.VAULT_URI }}  -e VAULT_TOKEN=${{ secrets.VAULT_TOKEN }} -e VAULT_AUTHENTICATION=${{ secrets.VAULT_AUTHENTICATION }} -e VAULT_BACKEND=${{ secrets.VAULT_BACKEND }} --name ${{ secrets.MODULE1 }} -p 8080:8080 --network=charlee ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE1 }}:latest
            docker run -d -e VAULT_URI=${{ secrets.VAULT_URI }}  -e VAULT_TOKEN=${{ secrets.VAULT_TOKEN }} -e VAULT_AUTHENTICATION=${{ secrets.VAULT_AUTHENTICATION }} -e VAULT_BACKEND=${{ secrets.VAULT_BACKEND }} --name ${{ secrets.MODULE2 }} -p 8081:8081 --network=charlee ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE2 }}:latest
            docker run -d -e VAULT_URI=${{ secrets.VAULT_URI }}  -e VAULT_TOKEN=${{ secrets.VAULT_TOKEN }} -e VAULT_AUTHENTICATION=${{ secrets.VAULT_AUTHENTICATION }} -e VAULT_BACKEND=${{ secrets.VAULT_BACKEND }} --name ${{ secrets.MODULE3 }} -p 8082:8082 --network=charlee ${{ secrets.DOCKER_USER }}/${{ secrets.MODULE3 }}:latest
